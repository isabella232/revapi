{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
        "missing-classes": {
            "type": "object",
            "properties": {
                "behavior": {
                    "type": "string",
                    "enum": [ "ignore", "error", "report" ],
                    "default": "report"
                },
                "ignoreMissingAnnotations": {
                    "type": "boolean",
                    "default": "false"
                }
            }
        },
        "reportUsesFor": {
            "oneOf": [
                {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "uniqueItems": true,
                    "default": ["java.missing.newClass", "java.missing.oldClass", "java.missing.oldSuperType",
                        "java.missing.newSuperType", "java.class.nonPublicPartOfAPI",
                        "java.class.externalClassNoLongerExposedInAPI", "java.class.externalClassExposedInAPI"]
                },
                {
                    "type": "string",
                    "enum": ["all-differences"]
                }
            ]
        },
        "filter": {
            "type": "object",
            "properties": {
                "classes": {
                    "type": "object",
                    "properties": {
                        "regex": {
                            "description": "Whether to understand the class names as regular expressions.",
                            "type": "boolean",
                            "default": "false"
                        },
                        "include": {
                            "type": "array",
                            "items" : {
                                "type" : "string"
                            }
                        },
                        "exclude": {
                            "type": "array",
                            "items" : {
                                "type" : "string"
                            }
                        }
                    }
                },
                "packages": {
                    "type": "object",
                    "properties": {
                        "regex": {
                            "description": "Whether to understand the package names as regular expressions.",
                            "type": "boolean",
                            "default": "false"
                        },
                        "include": {
                            "type": "array",
                            "items" : {
                                "type" : "string"
                            }
                        },
                        "exclude": {
                            "type": "array",
                            "items" : {
                                "type" : "string"
                            }
                        }
                    }
                }
            }
        },
        "matchOverloads" : {
            "type": "boolean",
            "default": true,
            "description": "Whether to try and heuristically match the changes overloaded methods. This can never be 100% precise because that would require guessing authors intentions. The heuristic is based number of parameters and the textual 'distance' of individual parameter types."
        }
    },
    "additionalProperties": true
}
